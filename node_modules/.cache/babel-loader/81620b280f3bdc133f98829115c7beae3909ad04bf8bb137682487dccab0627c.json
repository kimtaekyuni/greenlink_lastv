{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgkim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\finalgreenlinkv2\\\\finalgreenlink\\\\src\\\\pages\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Btn2 from \"../components/Btn2\";\nimport TopNav from \"../components/TopNav\";\nimport on_bell_icon from \"../assets/on_Bell_Icon.png\";\nimport setting_icon from \"../assets/Setting_Icon.png\";\nimport MainNav from \"../components/MainNav.js\";\nimport styles from \"./HomePage.module.css\";\nimport PlantImage from \"../components/PlantImage\";\nimport HumidiBar from \"../components/HumiBar\";\nimport { NotifiText } from \"./NotificationsPage.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RefreshButton() {\n  const refreshPage = () => {\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: styles.refresh,\n    onClick: refreshPage,\n    children: \"\\uD83D\\uDCA7\\uC2B5\\uB3C4 \\uD655\\uC778\\uD558\\uAE30\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = RefreshButton;\nfunction NotifiHomeBox({\n  className,\n  item\n}) {\n  function calculateTime(created_at) {\n    const now = new Date();\n    const createdTime = new Date(created_at);\n    const diffInSeconds = Math.floor((now - createdTime) / 1000);\n    if (diffInSeconds < 0) {\n      alert(\"알림 오류: 미래의 알림입니다.\");\n      throw new Error(\"알림 오류: 미래의 알림입니다.\");\n    } else if (diffInSeconds < 60) {\n      return \"지금\";\n    } else if (diffInSeconds < 3600) {\n      return `${Math.floor(diffInSeconds / 60)}분 전`;\n    } else if (diffInSeconds < 86400) {\n      return `${Math.floor(diffInSeconds / 3600)}시간 전`;\n    } else if (diffInSeconds < 2592000) {\n      return `${Math.floor(diffInSeconds / 86400)}일 전`;\n    } else {\n      return `${Math.floor(diffInSeconds / 2592000)}달 전`;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.time,\n      children: calculateTime(item.created_at)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: className,\n      children: /*#__PURE__*/_jsxDEV(NotifiText, {\n        className: styles.notifitext,\n        message: item.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, item.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_c2 = NotifiHomeBox;\nfunction NotifiHomeList({\n  className,\n  items\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: items.slice(-2).reverse().map(item => {\n      return /*#__PURE__*/_jsxDEV(NotifiHomeBox, {\n        className: styles.notifihomebox,\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 18\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_c3 = NotifiHomeList;\nfunction Home() {\n  _s();\n  const [potData, setPotData] = useState({});\n  const [userData, setUserData] = useState({});\n  const [plantInfo, setPlantInfo] = useState(null);\n\n  // const userInfo = {\n  //   user: {\n  //     id: 8,\n  //     username: \"01024242424\",\n  //     korean_name: \"이보름보름\",\n  //     profile_picture:\n  //       \"https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi.pinimg.com%2F736x%2F47%2F63%2Fd1%2F4763d159c22b4256cfbb9c284613008f.jpg&type=sc960_832\",\n  //     flower_pot: {\n  //       pot_number: 1234,\n  //       plant_name: \"둘째매화\",\n  //       start_date: \"2023-11-29\",\n  //       plant_type: \"매화\",\n  //       moisture_level: 90,\n  //     },\n  //     nickname: \"해피캣\",\n  //   },\n  //   message: \"login success\",\n  //   token: {\n  //     access:\n  //       \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzMyODEwOTY0LCJpYXQiOjE3MDEyNzQ5NjQsImp0aSI6ImVmOWU4NDJkZDdkMzQ2Njk5ODkzOWVlYzZjYmQ1ZDUyIiwidXNlcl9pZCI6OH0.zsSMFFhBioXLPuSmFlpZIyxRSfY1aji7VgcpHoDq-TE\",\n  //   },\n  // };\n  // const accessToken = userInfo.token.access;\n  const userInfo = JSON.parse(localStorage.getItem(\"data\"));\n  // console.log(userInfo);\n  // const accessToken = userInfo.token.access;\n  // const potNumber = userInfo.user.flower_pot.pot_number;\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"accessToken\", \"temporary-token\");\n  // }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"https://port-0-cloudtype-32updzt2alpmcc05e.sel4.cloudtype.app/api/home/\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            // Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\n            Authorization: `Bearer ${userInfo.token.access}`\n          },\n          mode: \"cors\"\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        // const data = await JSON.parse(dataJson);\n        console.log(data);\n        setPlantInfo(data);\n        // const plantInfo = data;\n        console.log(plantInfo);\n      } catch (error) {\n        console.error(\"Fetching data failed\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // const plantInfo = {\n  //   flower_pot: {\n  //     pot_number: 1234,\n  //     plant_name: \"둘째매화\",\n  //     start_date: \"2023-11-29\",\n  //     plant_type: \"매화\",\n  //     moisture_level: 90,\n  //   },\n  //   notifications: [\n  //     {\n  //       id: 1,\n  //       message: \"박경빈님을 환영합니다.\",\n  //       created_at: \"2023-11-29T13:59:45.989172Z\",\n  //       flower_pot: 1234,\n  //     },\n  //     {\n  //       id: 2,\n  //       message: \"박경빈님을 환영합니다.\",\n  //       created_at: \"2023-11-29T15:07:40.225241Z\",\n  //       flower_pot: 1234,\n  //     },\n  //     {\n  //       id: 3,\n  //       message: \"물 주세요!!\",\n  //       created_at: \"2023-11-29T15:50:35.300359Z\",\n  //       flower_pot: 1234,\n  //     },\n  //     {\n  //       id: 4,\n  //       message: \"물 주세요!!\",\n  //       created_at: \"2023-11-29T15:52:50.258988Z\",\n  //       flower_pot: 1234,\n  //     },\n  //     {\n  //       id: 5,\n  //       message: \"NEXT님이 식물에 물을 주었습니다!\",\n  //       created_at: \"2023-11-29T15:53:05.981619Z\",\n  //       flower_pot: 1234,\n  //     },\n  //     {\n  //       id: 6,\n  //       message: \"물 주세요!!\",\n  //       created_at: \"2023-11-29T15:53:27.988244Z\",\n  //       flower_pot: 1234,\n  //     },\n  //     {\n  //       id: 7,\n  //       message: \"NEXT님이 식물에 물을 주었습니다!\",\n  //       created_at: \"2023-11-29T15:53:34.853738Z\",\n  //       flower_pot: 1234,\n  //     },\n  //   ],\n  //   message: \"complete\",\n  // };\n\n  // const plantName = plantInfo.flower_pot.plant_name;\n  // const startDate = plantInfo.flower_pot.start_date;\n  // const moistureLevel = plantInfo.flower_pot.moisture_level;\n  // const notifications = plantInfo.notifications;\n\n  const calculateDays = startDate => {\n    console.log(startDate);\n    const start = new Date(startDate);\n    const now = new Date(); // 현재 날짜와 시간\n    const diffTime = Math.abs(now - start);\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    console.log(diffDays);\n    return diffDays;\n  };\n  if (!plantInfo) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.main,\n    children: [/*#__PURE__*/_jsxDEV(TopNav, {\n      text: undefined,\n      link1: \"/api/notifications\",\n      link2: \"/setting\",\n      icon1: on_bell_icon,\n      icon2: setting_icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.titlebox,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.title,\n        children: [\"\\uD83C\\uDF31 \", plantInfo.flower_pot.plant_name, \"\\uC640 \\uD568\\uAED8\\uD55C\\uC9C0\", \" \", calculateDays(plantInfo.flower_pot.start_date), \"\\uC77C\\uC9F8\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.titleback\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotifiHomeList, {\n      className: styles.notifihomelist,\n      items: plantInfo.notifications\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PlantImage, {\n        className: styles.plantimage,\n        level: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.potnamebox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.potname,\n          children: plantInfo.flower_pot.plant_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.level,\n          children: \"Lv. 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RefreshButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HumidiBar, {\n      humidity: plantInfo.flower_pot.moisture_level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Btn2, {\n      text: \"\\uC2DD\\uBB3C \\uC815\\uBCF4 \\uC218\\uC815\",\n      link: \"/api/homemodify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainNav, {\n      className: \"mainNav\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"EDoBpAPFyUKpahhnmPF0x/Q/hmk=\");\n_c4 = Home;\nexport default Home;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RefreshButton\");\n$RefreshReg$(_c2, \"NotifiHomeBox\");\n$RefreshReg$(_c3, \"NotifiHomeList\");\n$RefreshReg$(_c4, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Btn2","TopNav","on_bell_icon","setting_icon","MainNav","styles","PlantImage","HumidiBar","NotifiText","jsxDEV","_jsxDEV","RefreshButton","refreshPage","window","location","reload","className","refresh","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","NotifiHomeBox","item","calculateTime","created_at","now","Date","createdTime","diffInSeconds","Math","floor","alert","Error","container","time","notifitext","message","id","_c2","NotifiHomeList","items","slice","reverse","map","notifihomebox","_c3","Home","_s","potData","setPotData","userData","setUserData","plantInfo","setPlantInfo","userInfo","JSON","parse","localStorage","getItem","fetchData","response","fetch","method","headers","Authorization","token","access","mode","ok","status","data","json","console","log","error","calculateDays","startDate","start","diffTime","abs","diffDays","ceil","main","text","undefined","link1","link2","icon1","icon2","titlebox","title","flower_pot","plant_name","start_date","titleback","notifihomelist","notifications","plantimage","level","potnamebox","potname","humidity","moisture_level","link","_c4","$RefreshReg$"],"sources":["C:/Users/tgkim/OneDrive/바탕 화면/finalgreenlinkv2/finalgreenlink/src/pages/HomePage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Btn2 from \"../components/Btn2\";\r\nimport TopNav from \"../components/TopNav\";\r\nimport on_bell_icon from \"../assets/on_Bell_Icon.png\";\r\nimport setting_icon from \"../assets/Setting_Icon.png\";\r\nimport MainNav from \"../components/MainNav.js\";\r\nimport styles from \"./HomePage.module.css\";\r\nimport PlantImage from \"../components/PlantImage\";\r\nimport HumidiBar from \"../components/HumiBar\";\r\nimport { NotifiText } from \"./NotificationsPage.js\";\r\n\r\nfunction RefreshButton() {\r\n  const refreshPage = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  return (\r\n    <button className={styles.refresh} onClick={refreshPage}>\r\n      💧습도 확인하기\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction NotifiHomeBox({ className, item }) {\r\n  function calculateTime(created_at) {\r\n    const now = new Date();\r\n    const createdTime = new Date(created_at);\r\n    const diffInSeconds = Math.floor((now - createdTime) / 1000);\r\n\r\n    if (diffInSeconds < 0) {\r\n      alert(\"알림 오류: 미래의 알림입니다.\");\r\n      throw new Error(\"알림 오류: 미래의 알림입니다.\");\r\n    } else if (diffInSeconds < 60) {\r\n      return \"지금\";\r\n    } else if (diffInSeconds < 3600) {\r\n      return `${Math.floor(diffInSeconds / 60)}분 전`;\r\n    } else if (diffInSeconds < 86400) {\r\n      return `${Math.floor(diffInSeconds / 3600)}시간 전`;\r\n    } else if (diffInSeconds < 2592000) {\r\n      return `${Math.floor(diffInSeconds / 86400)}일 전`;\r\n    } else {\r\n      return `${Math.floor(diffInSeconds / 2592000)}달 전`;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container} key={item.id}>\r\n      <div className={styles.time}>{calculateTime(item.created_at)}</div>\r\n      <div className={className}>\r\n        <NotifiText className={styles.notifitext} message={item.message} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction NotifiHomeList({ className, items }) {\r\n  return (\r\n    <div className={className}>\r\n      {items\r\n        .slice(-2)\r\n        .reverse()\r\n        .map((item) => {\r\n          return <NotifiHomeBox className={styles.notifihomebox} item={item} />;\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  const [potData, setPotData] = useState({});\r\n  const [userData, setUserData] = useState({});\r\n  const [plantInfo, setPlantInfo] = useState(null);\r\n\r\n  // const userInfo = {\r\n  //   user: {\r\n  //     id: 8,\r\n  //     username: \"01024242424\",\r\n  //     korean_name: \"이보름보름\",\r\n  //     profile_picture:\r\n  //       \"https://search.pstatic.net/sunny/?src=https%3A%2F%2Fi.pinimg.com%2F736x%2F47%2F63%2Fd1%2F4763d159c22b4256cfbb9c284613008f.jpg&type=sc960_832\",\r\n  //     flower_pot: {\r\n  //       pot_number: 1234,\r\n  //       plant_name: \"둘째매화\",\r\n  //       start_date: \"2023-11-29\",\r\n  //       plant_type: \"매화\",\r\n  //       moisture_level: 90,\r\n  //     },\r\n  //     nickname: \"해피캣\",\r\n  //   },\r\n  //   message: \"login success\",\r\n  //   token: {\r\n  //     access:\r\n  //       \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzMyODEwOTY0LCJpYXQiOjE3MDEyNzQ5NjQsImp0aSI6ImVmOWU4NDJkZDdkMzQ2Njk5ODkzOWVlYzZjYmQ1ZDUyIiwidXNlcl9pZCI6OH0.zsSMFFhBioXLPuSmFlpZIyxRSfY1aji7VgcpHoDq-TE\",\r\n  //   },\r\n  // };\r\n  // const accessToken = userInfo.token.access;\r\n  const userInfo = JSON.parse(localStorage.getItem(\"data\"));\r\n  // console.log(userInfo);\r\n  // const accessToken = userInfo.token.access;\r\n  // const potNumber = userInfo.user.flower_pot.pot_number;\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem(\"accessToken\", \"temporary-token\");\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"https://port-0-cloudtype-32updzt2alpmcc05e.sel4.cloudtype.app/api/home/\",\r\n          {\r\n            method: \"GET\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // Authorization: `Bearer ${localStorage.getItem(\"accessToken\")}`,\r\n              Authorization: `Bearer ${userInfo.token.access}`,\r\n            },\r\n            mode: \"cors\",\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        // const data = await JSON.parse(dataJson);\r\n        console.log(data);\r\n        setPlantInfo(data);\r\n        // const plantInfo = data;\r\n        console.log(plantInfo);\r\n      } catch (error) {\r\n        console.error(\"Fetching data failed\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // const plantInfo = {\r\n  //   flower_pot: {\r\n  //     pot_number: 1234,\r\n  //     plant_name: \"둘째매화\",\r\n  //     start_date: \"2023-11-29\",\r\n  //     plant_type: \"매화\",\r\n  //     moisture_level: 90,\r\n  //   },\r\n  //   notifications: [\r\n  //     {\r\n  //       id: 1,\r\n  //       message: \"박경빈님을 환영합니다.\",\r\n  //       created_at: \"2023-11-29T13:59:45.989172Z\",\r\n  //       flower_pot: 1234,\r\n  //     },\r\n  //     {\r\n  //       id: 2,\r\n  //       message: \"박경빈님을 환영합니다.\",\r\n  //       created_at: \"2023-11-29T15:07:40.225241Z\",\r\n  //       flower_pot: 1234,\r\n  //     },\r\n  //     {\r\n  //       id: 3,\r\n  //       message: \"물 주세요!!\",\r\n  //       created_at: \"2023-11-29T15:50:35.300359Z\",\r\n  //       flower_pot: 1234,\r\n  //     },\r\n  //     {\r\n  //       id: 4,\r\n  //       message: \"물 주세요!!\",\r\n  //       created_at: \"2023-11-29T15:52:50.258988Z\",\r\n  //       flower_pot: 1234,\r\n  //     },\r\n  //     {\r\n  //       id: 5,\r\n  //       message: \"NEXT님이 식물에 물을 주었습니다!\",\r\n  //       created_at: \"2023-11-29T15:53:05.981619Z\",\r\n  //       flower_pot: 1234,\r\n  //     },\r\n  //     {\r\n  //       id: 6,\r\n  //       message: \"물 주세요!!\",\r\n  //       created_at: \"2023-11-29T15:53:27.988244Z\",\r\n  //       flower_pot: 1234,\r\n  //     },\r\n  //     {\r\n  //       id: 7,\r\n  //       message: \"NEXT님이 식물에 물을 주었습니다!\",\r\n  //       created_at: \"2023-11-29T15:53:34.853738Z\",\r\n  //       flower_pot: 1234,\r\n  //     },\r\n  //   ],\r\n  //   message: \"complete\",\r\n  // };\r\n\r\n  // const plantName = plantInfo.flower_pot.plant_name;\r\n  // const startDate = plantInfo.flower_pot.start_date;\r\n  // const moistureLevel = plantInfo.flower_pot.moisture_level;\r\n  // const notifications = plantInfo.notifications;\r\n\r\n  const calculateDays = (startDate) => {\r\n    console.log(startDate);\r\n    const start = new Date(startDate);\r\n    const now = new Date(); // 현재 날짜와 시간\r\n    const diffTime = Math.abs(now - start);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    console.log(diffDays);\r\n    return diffDays;\r\n  };\r\n\r\n  if (!plantInfo) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div className={styles.main}>\r\n      <TopNav\r\n        text={undefined}\r\n        link1=\"/api/notifications\"\r\n        link2=\"/setting\"\r\n        icon1={on_bell_icon}\r\n        icon2={setting_icon}\r\n      />\r\n      <div className={styles.titlebox}>\r\n        <div className={styles.title}>\r\n          🌱 {plantInfo.flower_pot.plant_name}와 함께한지{\" \"}\r\n          {calculateDays(plantInfo.flower_pot.start_date)}일째\r\n        </div>\r\n        <div className={styles.titleback}></div>\r\n      </div>\r\n      <NotifiHomeList\r\n        className={styles.notifihomelist}\r\n        items={plantInfo.notifications}\r\n      />\r\n      <div>\r\n        <PlantImage className={styles.plantimage} level={3} />\r\n        <div className={styles.potnamebox}>\r\n          <div className={styles.potname}>\r\n            {plantInfo.flower_pot.plant_name}\r\n          </div>\r\n          <div className={styles.level}>Lv. 2</div>\r\n        </div>\r\n      </div>\r\n      <RefreshButton />\r\n      <HumidiBar humidity={plantInfo.flower_pot.moisture_level} />\r\n      <Btn2 text=\"식물 정보 수정\" link=\"/api/homemodify\" />\r\n      <MainNav className=\"mainNav\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}