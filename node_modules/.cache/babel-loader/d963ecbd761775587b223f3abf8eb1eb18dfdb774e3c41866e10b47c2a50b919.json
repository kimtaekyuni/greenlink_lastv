{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tgkim\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\finalgreenlinkv2\\\\finalgreenlink\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AccountNav from \"../components/AccountNav\";\nimport { Input2 } from \"../components/AccountInput\";\nimport { useState } from \"react\";\nimport BigBtn from \"../components/BigBtn\";\n\n// const to6 = {\n//   textDecoration: \"none\",\n//   display: \"flex\",\n//   justifyContent: \"center\",\n//   fontSize: \"calc(1vh + 1.25vw)\",\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst textstyle = {\n  color: \"black\" /* 텍스트 색상을 검정색으로 고정 */,\n  fontSize: \"2em\",\n  marginLeft: \"16vw\"\n};\nfunction LoginPage(props) {\n  _s();\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [mypassword, setMypassword] = useState(\"\");\n  const navigate = useNavigate();\n\n  //로그인하기 누르면 시행되는 함수\n  const login = () => {\n    //양식 잘못 입력하면\n    if (!phoneNumber || !mypassword) {\n      alert(\"모든 값을 입력해주세요\");\n    } else if (phoneNumber.length !== 11 || !phoneNumber.startsWith(\"010\")) {\n      alert(\"전화번호를 올바른 형식으로 입력해주세요.\");\n    } else if (mypassword.length < 8 || mypassword.length > 12) {\n      alert(\"비밀번호는 8자 이상, 12자 이하여야 합니다.\");\n    } else if (!/[!@#$%^&*(),.?\":{}|<>]/.test(mypassword) || !/[A-Z]/.test(mypassword)) {\n      alert(\"비밀번호에 특수문자와 대문자가 최소 하나 이상 포함되어야 합니다. \");\n    } //양식 잘 입력하면\n    else {\n      localStorage.setItem(\"username\", phoneNumber);\n      localStorage.setItem(\"mypassword\", mypassword);\n      // 로그인 버튼 클릭시 보낼 데이터\n\n      const username = localStorage.getItem(\"username\");\n      const password = localStorage.getItem(\"mypassword\");\n      const logindata = {\n        username,\n        password\n      };\n      console.log(logindata); //data 양식 확인\n      // 백에 회원가입 데이터 보내는 부분 !!URL 추가해야 함.\n      fetch(\"https://port-0-cloudtype-32updzt2alpmcc05e.sel4.cloudtype.app/api/login/\", {\n        method: \"POST\",\n        headers: {\n          // headers는 HTTP 요청 헤더를 설정. 헤더는 클라이언트와 서버 간의 통신에서 추가적인 정보를 전달하기 위해 사용.\n          \"Content-Type\": \"application/json\" // 본문에 포함된 데이터가 JSON형식으로 전달됨을 나타냄\n        },\n\n        body: JSON.stringify(logindata),\n        // 보낼 데이터 json으로 변형\n        mode: \"cors\" // 보안 때문에 붙이기!!\n      })\n      //로그인 정보 확인 로직 필요\n      .then(response => {\n        console.log(response);\n        //성공적으로 로그인할 때\n        if (response.ok) {\n          return response.json();\n        }\n        //로그인 실패했을 때\n        else {\n          throw new Error(\"데이터를 백엔드로 보내는데 실패했습니다.\");\n        }\n      }).then(data => {\n        if (!data.token) {\n          throw new Error(\"로그인에 실패하셨습니다.\");\n        } else {\n          localStorage.setItem(\"data\", JSON.stringify(data));\n          console.log(localStorage.getItem(data));\n          alert(\"로그인에 성공하셨습니다.\");\n          navigate(\"/api/home\");\n        }\n      }).catch(error => {\n        console.error(error);\n        alert(\"죄송합니다. 로그인에 실패하셨습니다.\");\n        navigate(\"/api/login\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AccountNav, {\n      text1: \"\\uB85C\\uADF8\\uC778\",\n      text2: \"\\uAC00\\uC785\\uD558\\uAE30\",\n      link1: \"/signupstep1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"8vh\",\n        marginBottom: \"5vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: textstyle,\n        children: \"\\uC804\\uD654\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value),\n        placeholder: \"01012345678\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: textstyle,\n        children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input2, {\n        type: \"password\",\n        value: mypassword,\n        onChange: e => setMypassword(e.target.value),\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BigBtn, {\n      onClick: login,\n      text: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"SfdyK8Rs6REU8F+k1QShosAqOtg=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","Link","useNavigate","AccountNav","Input2","useState","BigBtn","jsxDEV","_jsxDEV","textstyle","color","fontSize","marginLeft","LoginPage","props","_s","phoneNumber","setPhoneNumber","mypassword","setMypassword","navigate","login","alert","length","startsWith","test","localStorage","setItem","username","getItem","password","logindata","console","log","fetch","method","headers","body","JSON","stringify","mode","then","response","ok","json","Error","data","token","catch","error","children","text1","text2","link1","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","marginBottom","type","value","onChange","e","target","placeholder","onClick","text","_c","$RefreshReg$"],"sources":["C:/Users/tgkim/OneDrive/바탕 화면/finalgreenlinkv2/finalgreenlink/src/pages/LoginPage.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport AccountNav from \"../components/AccountNav\";\r\nimport { Input2 } from \"../components/AccountInput\";\r\nimport { useState } from \"react\";\r\nimport BigBtn from \"../components/BigBtn\";\r\n\r\n// const to6 = {\r\n//   textDecoration: \"none\",\r\n//   display: \"flex\",\r\n//   justifyContent: \"center\",\r\n//   fontSize: \"calc(1vh + 1.25vw)\",\r\n// };\r\n\r\nconst textstyle = {\r\n  color: \"black\" /* 텍스트 색상을 검정색으로 고정 */,\r\n  fontSize: \"2em\",\r\n  marginLeft: \"16vw\",\r\n};\r\n\r\nfunction LoginPage(props) {\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  const [mypassword, setMypassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  //로그인하기 누르면 시행되는 함수\r\n  const login = () => {\r\n    //양식 잘못 입력하면\r\n    if (!phoneNumber || !mypassword) {\r\n      alert(\"모든 값을 입력해주세요\");\r\n    } else if (phoneNumber.length !== 11 || !phoneNumber.startsWith(\"010\")) {\r\n      alert(\"전화번호를 올바른 형식으로 입력해주세요.\");\r\n    } else if (mypassword.length < 8 || mypassword.length > 12) {\r\n      alert(\"비밀번호는 8자 이상, 12자 이하여야 합니다.\");\r\n    } else if (\r\n      !/[!@#$%^&*(),.?\":{}|<>]/.test(mypassword) ||\r\n      !/[A-Z]/.test(mypassword)\r\n    ) {\r\n      alert(\r\n        \"비밀번호에 특수문자와 대문자가 최소 하나 이상 포함되어야 합니다. \"\r\n      );\r\n    } //양식 잘 입력하면\r\n    else {\r\n      localStorage.setItem(\"username\", phoneNumber);\r\n      localStorage.setItem(\"mypassword\", mypassword);\r\n      // 로그인 버튼 클릭시 보낼 데이터\r\n\r\n      const username = localStorage.getItem(\"username\");\r\n      const password = localStorage.getItem(\"mypassword\");\r\n      const logindata = {\r\n        username,\r\n        password,\r\n      };\r\n      console.log(logindata); //data 양식 확인\r\n      // 백에 회원가입 데이터 보내는 부분 !!URL 추가해야 함.\r\n      fetch(\r\n        \"https://port-0-cloudtype-32updzt2alpmcc05e.sel4.cloudtype.app/api/login/\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            // headers는 HTTP 요청 헤더를 설정. 헤더는 클라이언트와 서버 간의 통신에서 추가적인 정보를 전달하기 위해 사용.\r\n            \"Content-Type\": \"application/json\", // 본문에 포함된 데이터가 JSON형식으로 전달됨을 나타냄\r\n          },\r\n          body: JSON.stringify(logindata), // 보낼 데이터 json으로 변형\r\n          mode: \"cors\", // 보안 때문에 붙이기!!\r\n        }\r\n      )\r\n        //로그인 정보 확인 로직 필요\r\n        .then((response) => {\r\n          console.log(response);\r\n          //성공적으로 로그인할 때\r\n          if (response.ok) {\r\n            return response.json();\r\n          }\r\n          //로그인 실패했을 때\r\n          else {\r\n            throw new Error(\"데이터를 백엔드로 보내는데 실패했습니다.\");\r\n          }\r\n        })\r\n        .then((data) => {\r\n          if (!data.token) {\r\n            throw new Error(\"로그인에 실패하셨습니다.\");\r\n          } else {\r\n            localStorage.setItem(\"data\", JSON.stringify(data));\r\n\r\n            console.log(localStorage.getItem(data));\r\n            alert(\"로그인에 성공하셨습니다.\");\r\n            navigate(\"/api/home\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(error);\r\n          alert(\"죄송합니다. 로그인에 실패하셨습니다.\");\r\n          navigate(\"/api/login\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AccountNav text1=\"로그인\" text2=\"가입하기\" link1=\"/signupstep1\" />\r\n      <div style={{ marginTop: \"8vh\", marginBottom: \"5vh\" }}>\r\n        <p style={textstyle}>전화번호</p>\r\n        <Input2\r\n          type=\"text\"\r\n          value={phoneNumber}\r\n          onChange={(e) => setPhoneNumber(e.target.value)}\r\n          placeholder=\"01012345678\"\r\n        />\r\n        <p style={textstyle}>비밀번호</p>\r\n        <Input2\r\n          type=\"password\"\r\n          value={mypassword}\r\n          onChange={(e) => setMypassword(e.target.value)}\r\n          placeholder=\"비밀번호\"\r\n        />\r\n      </div>\r\n      <BigBtn onClick={login} text=\"로그인하기\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}